stages:
  - setup
  - build
  - deploy

setup-env:
  stage: setup
  image: alpine:latest
  script:
    - echo "Setting up environment variables"
    - echo "DB_CONNECTION=$DB_CONNECTION" >> .env
    - echo "DB_HOST=$DB_HOST" >> .env
    - echo "DB_PORT=$DB_PORT" >> .env
    - echo "DB_DATABASE=$DB_DATABASE" >> .env
    - echo "DB_USERNAME=$DB_USERNAME" >> .env
    - echo "DB_PASSWORD=$DB_PASSWORD" >> .env
    - echo "SSL_MODE=$SSL_MODE" >> .env
    - echo "OPENAI_API_KEY=$OPENAI_API_KEY" >> .env
  artifacts:
    paths:
      - .env

install-dependencies:
  stage: build
  image: composer:latest
  dependencies:
    - setup-env
  before_script:
    # Copy .env to production file
    - cp .env .env.production
    # Set up SSH (if needed)
    - mkdir -p ~/.ssh
    - echo "$SSH_PRIVATE_KEY" > ~/.ssh/id_rsa
    - chmod 600 ~/.ssh/id_rsa
    - ssh-keyscan -H github.com >> ~/.ssh/known_hosts
    # Create auth.json for Nova
    - echo '{ "http-basic": { "nova.laravel.com": { "username": "'"$NOVA_EMAIL"'", "password": "'"$NOVA_KEY"'" } } }' > auth.json
    # Configure Composer with Nova credentials
    - composer config http-basic.nova.laravel.com $NOVA_EMAIL $NOVA_KEY
  script:
    - composer install --no-interaction --prefer-dist --no-progress
    - npm install
    - npm run build
  cache:
    paths:
      - vendor/
      - node_modules/
  artifacts:
    paths:
      - vendor/
      - public/build/

deploy:
  stage: deploy
  image: composer:latest
  script:
    - php artisan migrate --force
    - php artisan cache:clear
    - php artisan config:clear
    - php artisan config:cache
    - php artisan route:cache
  only:
    - main
